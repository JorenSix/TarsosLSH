<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="tarsos_lsh_library" name="Create TarsosLSH jar-files">

	<!-- Configuration -->
	<property name="version" value="0.9" />
	<property name="built_by" value="${user.name}" />
	<property name="junit_jar" value="../lib/hamcrest-core-1.3.jar:../lib/junit-4.11.jar" />

	<!-- run the ant timestamp task -->
	<tstamp />

	<!-- Clean the build system -->
	<target name="clean">
		<delete dir="../bin" />
		<delete dir="../doc" />
	</target>

	<!-- Compiles the java files to bytecode and copy required resources -->
	<target name="compile">
		<mkdir dir="../bin" />
		<javac srcdir="../src" destdir="../bin" includeantruntime="false">
			<classpath>
				<fileset dir="../lib" includes="*.jar" excludes="*src*.jar"  />
				<fileset dir="../lib/mapdb" includes="*.jar" excludes="*src*.jar"  />
			</classpath>
		</javac>
		
		<!-- copy all needed resources to bin dir
		<copy todir="../bin/be/tarsos/lsh/resources">
			<fileset dir="../src/be/tarsos/lsh/resources" />
		</copy>
		 -->
	</target>


	<!-- Creates javadoc in doc directory -->
	<target name="javadoc">
		<javadoc access="public" author="true" classpath="${junit_jar}" destdir="../doc" doctitle="TarsosLSH API ${version}-${DSTAMP}" nodeprecated="false" nodeprecatedlist="false" noindex="false" nonavbar="false" notree="false" packagenames="be.tarsos.lsh,be.tarsos.lsh.families,be.tarsos.lsh.util" source="1.6" sourcepath="../src" splitindex="true" use="true" version="true" />
	</target>

	<!-- Creates the TarsosDSP jar library both with and withouth source code -->
	<target name="tarsos_lsh_library" depends="compile">

		<!-- with source code -->
		<jar destfile="TarsosLSH-${version}.jar" filesetmanifest="mergewithoutmain">
			<manifest>
				<!-- Standard manifest attributes -->
				<attribute name="Implementation-Version" value="${version}-${DSTAMP}" />
				<attribute name="Built-By" value="${built_by}" />
				<attribute name="Created-By" value="${built_by}" />
				<attribute name="Built-Date" value="${TODAY}" />
				<attribute name="Main-Class" value="be.tarsos.lsh.LSH" />
			</manifest>

			<!-- exclude everything except src dir -->
			<fileset dir="../bin">
				<exclude name="**/test/**" />
			</fileset>

			<!-- include source files -->
			<fileset dir="../src">
				<include name="**/*.java" />
			</fileset>
		</jar>

		<!-- without source code, binaries only -->
		<jar destfile="TarsosLSH-${version}-bin.jar" filesetmanifest="mergewithoutmain">
			<manifest>
				<!-- Standard manifest attributes -->
				<attribute name="Implementation-Version" value="${version}-${DSTAMP}" />
				<attribute name="Built-By" value="${built_by}" />
				<attribute name="Created-By" value="${built_by}" />
				<attribute name="Built-Date" value="${TODAY}" />
				<attribute name="Main-Class" value="be.tarsos.lsh.LSH" />
			</manifest>

			<!-- exclude everything except src dir -->
			<fileset dir="../bin">
				<exclude name="**/test/**" />
			</fileset>
		</jar>
	</target>

	
	<!-- builds a release: all examples, documentation and library in the correct folders-->
	<target name="release" depends="javadoc,tarsos_lsh_library">
		<copy todir="TarsosLSH-${version}-Documentation">
			<fileset dir="../doc" />
		</copy>
	</target>

	<!-- Compiles the junit classes -->
	<target name="compile_with_tests" depends="compile">
		<javac srcdir="../tests" destdir="../bin" classpath="${junit_jar}" debug="true" />
		<copy todir="../bin/be/tarsos/lsh/test/resources">
			<fileset dir="../test/be/tarsos/lsh/test/resources" />
		</copy>
	</target>

	<target name="junit" depends="compile_with_tests">
		<junit printsummary="true" showoutput="true" failureproperty="junit.failure">
			<test name='be.tarsos.lsh.test.HashUtilsTest' />
			<classpath>
				<pathelement path="${junit_jar}:../bin" />
			</classpath>
			<!-- does not work for an unknown reason 	
			<batchtest>
				<fileset dir="../tests/be/tarsos/dsp/test">
					<include name="**/*Test*.java" />
				</fileset>
			</batchtest>
		-->
		</junit>
	</target>
	

	<!-- echo "function lsh() {java -jar /opt/TarsosLSH/TarsosLSH.jar \"\$\@\"} " >> ~/.bashrc -->
	<target name="install">
	    <copy file="TarsosLSH-${version}-bin.jar" tofile="/opt/TarsosLSH/TarsosLSH.jar"/>
	</target>
	
</project>
